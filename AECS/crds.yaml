Name:         mongodbcommunity.mongodbcommunity.mongodb.com
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.15.0
              service.binding: path={.metadata.name}-{.spec.users[0].db}-{.spec.users[0].name},objectType=Secret
              service.binding/connectionString:
                path={.metadata.name}-{.spec.users[0].db}-{.spec.users[0].name},objectType=Secret,sourceKey=connectionString.standardSrv
              service.binding/password: path={.metadata.name}-{.spec.users[0].db}-{.spec.users[0].name},objectType=Secret,sourceKey=password
              service.binding/provider: community
              service.binding/type: mongodb
              service.binding/username: path={.metadata.name}-{.spec.users[0].db}-{.spec.users[0].name},objectType=Secret,sourceKey=username
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2025-02-11T17:50:57Z
  Generation:          1
  Resource Version:    308238
  UID:                 5d89b65b-72be-4a34-a22e-e2667204dd48
Spec:
  Conversion:
    Strategy:  None
  Group:       mongodbcommunity.mongodb.com
  Names:
    Kind:       MongoDBCommunity
    List Kind:  MongoDBCommunityList
    Plural:     mongodbcommunity
    Short Names:
      mdbc
    Singular:  mongodbcommunity
  Scope:       Namespaced
  Versions:
    Additional Printer Columns:
      Description:  Current state of the MongoDB deployment
      Json Path:    .status.phase
      Name:         Phase
      Type:         string
      Description:  Version of MongoDB server
      Json Path:    .status.version
      Name:         Version
      Type:         string
    Name:           v1
    Schema:
      openAPIV3Schema:
        Description:  MongoDBCommunity is the Schema for the mongodbs API
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object.
Servers should convert recognized schemas to the latest internal value, and
may reject unrecognized values.
More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:  string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents.
Servers may infer this from the endpoint the client submits requests to.
Cannot be updated.
In CamelCase.
More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:  string
          Metadata:
            Type:  object
          Spec:
            Description:  MongoDBCommunitySpec defines the desired state of MongoDB
            Properties:
              Additional Connection String Config:
                Description:                                   Additional options to be appended to the connection string. These options apply to the entire resource and to each user.
                Nullable:                                      true
                Type:                                          object
                X - Kubernetes - Preserve - Unknown - Fields:  true
              Additional Mongod Config:
                Description:  AdditionalMongodConfig is additional configuration that can be passed to
each data-bearing mongod at runtime. Uses the same structure as the mongod
configuration file: https://www.mongodb.com/docs/manual/reference/configuration-options/
                Nullable:                                      true
                Type:                                          object
                X - Kubernetes - Preserve - Unknown - Fields:  true
              Agent:
                Description:  AgentConfiguration sets options for the MongoDB automation agent
                Properties:
                  Audit Log Rotate:
                    Description:  AuditLogRotate if enabled, will enable AuditLogRotate for all processes.
                    Properties:
                      Include Audit Logs With Mongo DB Logs:
                        Description:  set to 'true' to have the Automation Agent rotate the audit files along
with mongodb log files
                        Type:  boolean
                      Num Total:
                        Description:  maximum number of log files to have total
                        Type:         integer
                      Num Uncompressed:
                        Description:  maximum number of log files to leave uncompressed
                        Type:         integer
                      Percent Of Diskspace:
                        Description:  Maximum percentage of the total disk space these log files should take up.
The string needs to be able to be converted to float64
                        Type:  string
                      Size Threshold MB:
                        Description:  Maximum size for an individual log file before rotation.
The string needs to be able to be converted to float64.
Fractional values of MB are supported.
                        Type:  string
                      Time Threshold Hrs:
                        Description:  maximum hours for an individual log file before rotation
                        Type:         integer
                    Required:
                      sizeThresholdMB
                      timeThresholdHrs
                    Type:  object
                  Log File:
                    Type:  string
                  Log Level:
                    Type:  string
                  Log Rotate:
                    Description:  LogRotate if enabled, will enable LogRotate for all processes.
                    Properties:
                      Include Audit Logs With Mongo DB Logs:
                        Description:  set to 'true' to have the Automation Agent rotate the audit files along
with mongodb log files
                        Type:  boolean
                      Num Total:
                        Description:  maximum number of log files to have total
                        Type:         integer
                      Num Uncompressed:
                        Description:  maximum number of log files to leave uncompressed
                        Type:         integer
                      Percent Of Diskspace:
                        Description:  Maximum percentage of the total disk space these log files should take up.
The string needs to be able to be converted to float64
                        Type:  string
                      Size Threshold MB:
                        Description:  Maximum size for an individual log file before rotation.
The string needs to be able to be converted to float64.
Fractional values of MB are supported.
                        Type:  string
                      Time Threshold Hrs:
                        Description:  maximum hours for an individual log file before rotation
                        Type:         integer
                    Required:
                      sizeThresholdMB
                      timeThresholdHrs
                    Type:  object
                  Max Log File Duration Hours:
                    Type:  integer
                  System Log:
                    Description:  SystemLog configures system log of mongod
                    Properties:
                      Destination:
                        Type:  string
                      Log Append:
                        Type:  boolean
                      Path:
                        Type:  string
                    Required:
                      destination
                      logAppend
                      path
                    Type:  object
                Type:      object
              Arbiters:
                Description:  Arbiters is the number of arbiters to add to the Replica Set.
It is not recommended to have more than one arbiter per Replica Set.
More info: https://www.mongodb.com/docs/manual/tutorial/add-replica-set-arbiter/
                Type:  integer
              Automation Config:
                Description:  AutomationConfigOverride is merged on top of the operator created automation config. Processes are merged
by name. Currently Only the process.disabled field is supported.
                Properties:
                  Processes:
                    Items:
                      Description:  OverrideProcess contains fields that we can override on the AutomationConfig processes.
                      Properties:
                        Disabled:
                          Type:  boolean
                        Log Rotate:
                          Description:  CrdLogRotate is the crd definition of LogRotate including fields in strings while the agent supports them as float64
                          Properties:
                            Include Audit Logs With Mongo DB Logs:
                              Description:  set to 'true' to have the Automation Agent rotate the audit files along
with mongodb log files
                              Type:  boolean
                            Num Total:
                              Description:  maximum number of log files to have total
                              Type:         integer
                            Num Uncompressed:
                              Description:  maximum number of log files to leave uncompressed
                              Type:         integer
                            Percent Of Diskspace:
                              Description:  Maximum percentage of the total disk space these log files should take up.
The string needs to be able to be converted to float64
                              Type:  string
                            Size Threshold MB:
                              Description:  Maximum size for an individual log file before rotation.
The string needs to be able to be converted to float64.
Fractional values of MB are supported.
                              Type:  string
                            Time Threshold Hrs:
                              Description:  maximum hours for an individual log file before rotation
                              Type:         integer
                          Required:
                            sizeThresholdMB
                            timeThresholdHrs
                          Type:  object
                        Name:
                          Type:  string
                      Required:
                        disabled
                        name
                      Type:  object
                    Type:    array
                  Replica Set:
                    Properties:
                      Settings:
                        Description:  MapWrapper is a wrapper for a map to be used by other structs.
The CRD generator does not support map[string]interface{}
on the top level and hence we need to work around this with
a wrapping struct.
                        Type:                                          object
                        X - Kubernetes - Preserve - Unknown - Fields:  true
                    Type:                                              object
                Type:                                                  object
              Feature Compatibility Version:
                Description:  FeatureCompatibilityVersion configures the feature compatibility version that will
be set for the deployment
                Type:  string
              Member Config:
                Description:  MemberConfig
                Items:
                  Properties:
                    Priority:
                      Type:  string
                    Tags:
                      Additional Properties:
                        Type:  string
                      Type:    object
                    Votes:
                      Type:  integer
                  Type:      object
                Type:        array
              Members:
                Description:  Members is the number of members in the replica set
                Type:         integer
              Prometheus:
                Description:  Prometheus configurations.
                Properties:
                  Metrics Path:
                    Description:  Indicates path to the metrics endpoint.
                    Pattern:      ^\/[a-z0-9]+$
                    Type:         string
                  Password Secret Ref:
                    Description:  Name of a Secret containing a HTTP Basic Auth Password.
                    Properties:
                      Key:
                        Description:  Key is the key in the secret storing this password. Defaults to "password"
                        Type:         string
                      Name:
                        Description:  Name is the name of the secret storing this user's password
                        Type:         string
                    Required:
                      name
                    Type:  object
                  Port:
                    Description:  Port where metrics endpoint will bind to. Defaults to 9216.
                    Type:         integer
                  Tls Secret Key Ref:
                    Description:  Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the
Prometheus endpoint.
                    Properties:
                      Key:
                        Description:  Key is the key in the secret storing this password. Defaults to "password"
                        Type:         string
                      Name:
                        Description:  Name is the name of the secret storing this user's password
                        Type:         string
                    Required:
                      name
                    Type:  object
                  Username:
                    Description:  HTTP Basic Auth Username for metrics endpoint.
                    Type:         string
                Required:
                  passwordSecretRef
                  username
                Type:  object
              Replica Set Horizons:
                Description:  ReplicaSetHorizons Add this parameter and values if you need your database
to be accessed outside of Kubernetes. This setting allows you to
provide different DNS settings within the Kubernetes cluster and
to the Kubernetes cluster. The Kubernetes Operator uses split horizon
DNS for replica set members. This feature allows communication both
within the Kubernetes cluster and from outside Kubernetes.
                Items:
                  Additional Properties:
                    Type:  string
                  Type:    object
                Type:      array
              Security:
                Description:  Security configures security features, such as TLS, and authentication settings for a deployment
                Properties:
                  Authentication:
                    Properties:
                      Agent Certificate Secret Ref:
                        Description:  AgentCertificateSecret is a reference to a Secret containing the certificate and the key for the automation agent
The secret needs to have available:
- certificate under key: "tls.crt"
- private key under key: "tls.key"
If additionally, tls.pem is present, then it needs to be equal to the concatenation of tls.crt and tls.key
                        Properties:
                          Name:
                            Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                            Type:                     string
                        Type:                         object
                        X - Kubernetes - Map - Type:  atomic
                      Agent Mode:
                        Description:  AgentMode contains the authentication mode used by the automation agent.
                        Enum:
                          SCRAM
                          SCRAM-SHA-256
                          SCRAM-SHA-1
                          X509
                        Type:  string
                      Ignore Unknown Users:
                        Default:   true
                        Nullable:  true
                        Type:      boolean
                      Modes:
                        Description:  Modes is an array specifying which authentication methods should be enabled.
                        Items:
                          Enum:
                            SCRAM
                            SCRAM-SHA-256
                            SCRAM-SHA-1
                            X509
                          Type:  string
                        Type:    array
                    Required:
                      modes
                    Type:  object
                  Roles:
                    Description:  User-specified custom MongoDB roles that should be configured in the deployment.
                    Items:
                      Description:  CustomRole defines a custom MongoDB role.
                      Properties:
                        Authentication Restrictions:
                          Description:  The authentication restrictions the server enforces on the role.
                          Items:
                            Description:  AuthenticationRestriction specifies a list of IP addresses and CIDR ranges users
are allowed to connect to or from.
                            Properties:
                              Client Source:
                                Items:
                                  Type:  string
                                Type:    array
                              Server Address:
                                Items:
                                  Type:  string
                                Type:    array
                            Required:
                              clientSource
                              serverAddress
                            Type:  object
                          Type:    array
                        Db:
                          Description:  The database of the role.
                          Type:         string
                        Privileges:
                          Description:  The privileges to grant the role.
                          Items:
                            Description:  Privilege defines the actions a role is allowed to perform on a given resource.
                            Properties:
                              Actions:
                                Items:
                                  Type:  string
                                Type:    array
                              Resource:
                                Description:  Resource specifies specifies the resources upon which a privilege permits actions.
See https://www.mongodb.com/docs/manual/reference/resource-document for more.
                                Properties:
                                  Any Resource:
                                    Type:  boolean
                                  Cluster:
                                    Type:  boolean
                                  Collection:
                                    Type:  string
                                  Db:
                                    Type:  string
                                Type:      object
                            Required:
                              actions
                              resource
                            Type:  object
                          Type:    array
                        Role:
                          Description:  The name of the role.
                          Type:         string
                        Roles:
                          Description:  An array of roles from which this role inherits privileges.
                          Items:
                            Description:  Role is the database role this user should have
                            Properties:
                              Db:
                                Description:  DB is the database the role can act on
                                Type:         string
                              Name:
                                Description:  Name is the name of the role
                                Type:         string
                            Required:
                              db
                              name
                            Type:  object
                          Type:    array
                      Required:
                        db
                        privileges
                        role
                      Type:  object
                    Type:    array
                  Tls:
                    Description:  TLS configuration for both client-server and server-server communication
                    Properties:
                      Ca Certificate Secret Ref:
                        Description:  CaCertificateSecret is a reference to a Secret containing the certificate for the CA which signed the server certificates
The certificate is expected to be available under the key "ca.crt"
                        Properties:
                          Name:
                            Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                            Type:                     string
                        Type:                         object
                        X - Kubernetes - Map - Type:  atomic
                      Ca Config Map Ref:
                        Description:  CaConfigMap is a reference to a ConfigMap containing the certificate for the CA which signed the server certificates
The certificate is expected to be available under the key "ca.crt"
This field is ignored when CaCertificateSecretRef is configured
                        Properties:
                          Name:
                            Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                            Type:                     string
                        Type:                         object
                        X - Kubernetes - Map - Type:  atomic
                      Certificate Key Secret Ref:
                        Description:  CertificateKeySecret is a reference to a Secret containing a private key and certificate to use for TLS.
The key and cert are expected to be PEM encoded and available at "tls.key" and "tls.crt".
This is the same format used for the standard "kubernetes.io/tls" Secret type, but no specific type is required.
Alternatively, an entry tls.pem, containing the concatenation of cert and key, can be provided.
If all of tls.pem, tls.crt and tls.key are present, the tls.pem one needs to be equal to the concatenation of tls.crt and tls.key
                        Properties:
                          Name:
                            Description:  Name of the referent.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
TODO: Add other useful fields. apiVersion, kind, uid?
                            Type:                     string
                        Type:                         object
                        X - Kubernetes - Map - Type:  atomic
                      Enabled:
                        Type:  boolean
                      Optional:
                        Description:  Optional configures if TLS should be required or optional for connections
                        Type:         boolean
                    Required:
                      enabled
                    Type:  object
                Type:      object
              Stateful Set:
                Description:  StatefulSetConfiguration holds the optional custom StatefulSet
that should be merged into the operator created one.
                Properties:
                  Metadata:
                    Description:  StatefulSetMetadataWrapper is a wrapper around Labels and Annotations
                    Properties:
                      Annotations:
                        Additional Properties:
                          Type:  string
                        Type:    object
                      Labels:
                        Additional Properties:
                          Type:  string
                        Type:    object
                    Type:        object
                  Spec:
                    Type:                                          object
                    X - Kubernetes - Preserve - Unknown - Fields:  true
                Required:
                  spec
                Type:  object
              Type:
                Description:  Type defines which type of MongoDB deployment the resource should create
                Enum:
                  ReplicaSet
                Type:  string
              Users:
                Description:  Users specifies the MongoDB users that should be configured in your deployment
                Items:
                  Properties:
                    Additional Connection String Config:
                      Description:  Additional options to be appended to the connection string.
These options apply only to this user and will override any existing options in the resource.
                      Nullable:                                      true
                      Type:                                          object
                      X - Kubernetes - Preserve - Unknown - Fields:  true
                    Connection String Secret Name:
                      Description:  ConnectionStringSecretName is the name of the secret object created by the operator which exposes the connection strings for the user.
If provided, this secret must be different for each user in a deployment.
                      Type:  string
                    Connection String Secret Namespace:
                      Description:  ConnectionStringSecretNamespace is the namespace of the secret object created by the operator which exposes the connection strings for the user.
                      Type:         string
                    Db:
                      Default:      admin
                      Description:  DB is the database the user is stored in. Defaults to "admin"
                      Type:         string
                    Name:
                      Description:  Name is the username of the user
                      Type:         string
                    Password Secret Ref:
                      Description:  PasswordSecretRef is a reference to the secret containing this user's password
                      Properties:
                        Key:
                          Description:  Key is the key in the secret storing this password. Defaults to "password"
                          Type:         string
                        Name:
                          Description:  Name is the name of the secret storing this user's password
                          Type:         string
                      Required:
                        name
                      Type:  object
                    Roles:
                      Description:  Roles is an array of roles assigned to this user
                      Items:
                        Description:  Role is the database role this user should have
                        Properties:
                          Db:
                            Description:  DB is the database the role can act on
                            Type:         string
                          Name:
                            Description:  Name is the name of the role
                            Type:         string
                        Required:
                          db
                          name
                        Type:  object
                      Type:    array
                    Scram Credentials Secret Name:
                      Description:  ScramCredentialsSecretName appended by string "scram-credentials" is the name of the secret object created by the mongoDB operator for storing SCRAM credentials
These secrets names must be different for each user in a deployment.
                      Pattern:  ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      Type:     string
                  Required:
                    name
                    roles
                  Type:  object
                Type:    array
              Version:
                Description:  Version defines which version of MongoDB will be used
                Type:         string
            Required:
              security
              type
              users
            Type:  object
          Status:
            Description:  MongoDBCommunityStatus defines the observed state of MongoDB
            Properties:
              Current Mongo DB Arbiters:
                Type:  integer
              Current Mongo DB Members:
                Type:  integer
              Current Stateful Set Arbiters Replicas:
                Type:  integer
              Current Stateful Set Replicas:
                Type:  integer
              Message:
                Type:  string
              Mongo Uri:
                Type:  string
              Phase:
                Type:  string
              Version:
                Type:  string
            Required:
              currentMongoDBMembers
              currentStatefulSetReplicas
              mongoUri
              phase
            Type:  object
        Type:      object
    Served:        true
    Storage:       true
    Subresources:
      Status:
Status:
  Accepted Names:
    Kind:       MongoDBCommunity
    List Kind:  MongoDBCommunityList
    Plural:     mongodbcommunity
    Short Names:
      mdbc
    Singular:  mongodbcommunity
  Conditions:
    Last Transition Time:  2025-02-11T17:50:57Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2025-02-11T17:50:57Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1
Events:  <none>

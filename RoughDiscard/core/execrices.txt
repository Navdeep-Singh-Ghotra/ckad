1. Create a namespace called 'mynamespace' and a pod with image nginx called nginx on this namespace

config set-context --current --namespace=mynamespace
k create ns mynamespace
k run nginx --image=nginx

2. Create the pod that was just described using YAML
 k run nginx --image=nginx --dry-run=client -o yaml > nginx.yaml
 k create -f nginx.yaml

 3. Create a busybox pod (using kubectl command) that runs the command "env". Run it and see the output
 kubectl run busybox --image=busybox --command --restart=Never -it --rm -- env

 4. Create a busybox pod (using YAML) that runs the command "env". Run it and see the output
 kubectl run busybox --image=busybox --restart=Never --dry-run=client -o yaml --command -- env > envpod.yaml

 5. Get the YAML for a new namespace called 'myns' without creating it
 k create ns myns --dry-run=client -o yaml 

 6. Create the YAML for a new ResourceQuota called 'myrq' with hard limits of 1 CPU, 1G memory and 2 pods without creating it
 k create resourcequota myrq --hard=cpu=1,memory=1G,pods=2 --dry-run=client -o yaml > myrq.yaml

 7. Get pods on all namespaces
 kubectl get po --all-namespaces
 k get po -A

 8. Create a pod with image nginx called nginx and expose traffic on port 80
 k run po nginx --image=nginx --port=80

 9. Change pod's image to nginx:1.24.0. Observe that the container will be restarted as soon as the image gets pulled
use 'a' to insert after the cursor to enter insert mode
k edit po nginx

10. Get nginx pod's ip created in previous step, use a temp busybox image to wget its '/'

k run busybox --image=busybox --rm -it --restart=Never -- wget -0- 10.244.1.8:80

11. Get pod's YAML
k get po nginx

12. Get information about the pod, including details about potential issues (e.g. pod hasn't started)
k describe po nginx

13. Get pod logs
k logs nginx

14. If pod crashed and restarted, get logs about the previous instance
k logs nginx -p

15. Execute a simple shell on the nginx pod
k exec -it nginx -- /bin/sh

16. Create a busybox pod that echoes 'hello world' and then exits
k run busybox --image=busybox -it --restart=Never -- /bin/sh -c 'echo hello'

17. Do the same, but have the pod deleted automatically when it's completed
k run busybox --image=busybox -it --rm --restart=Never -- /bin/sh -c 'echo hello'

18. Create an nginx pod and set an env value as 'var1=val1'. Check the env value existence within the pod
 k run nginx --image=nginx --env=var1=val1
